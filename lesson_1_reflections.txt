How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Took a few seconds instead of hours manually.

How could having easy access to the entire history of a file make you a better
programmer in the long term?

    You can find out when a bug was introduced to code.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    It relies on the developer to understand when to make commits and not
    forget to make them.  The pros are that it allows freedom and responsibility
    to the developer, as well as artistic discernment.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git is used for multiple-file projects where the files are interrelated.
    Google Docs assumes that each document can stand alone.

How can you use the commands git log and git diff to view the history of files?

    I can look at the changes to the documents and get see the differences
    between versions.

How might using version control make you more confident to make changes that
could break something?

    If I use version control, I could break something and still get the project
    back to a previously working version.

Now that you have your workspace set up, what do you want to try using Git for?

    I want to do all my programming projects with Git or another version
    control system
